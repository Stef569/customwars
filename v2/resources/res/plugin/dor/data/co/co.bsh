// CO scripts
// All method consists of 2 parts the <co name>_<method name>
// The syntax is based on Java, more info @ http://www.beanshell.org/manual/syntax.html

  public void brenner_power() {
    for (Unit unit : game.getActivePlayer().getArmy()) {
      unit.addHp(3);
    }
  }

  public int brenner_getAttackBonusPercentage() {
    if (power || attacker.isInCOZone())
      return 110;
    else
      return 100;
  }

  public int brenner_getDefenseBonusPercentage() {
    if (power || attacker.isInCOZone())
      return 130;
    else
      return 100;
  }

  public int caulder_getAttackBonusPercentage() {
    if (power || attacker.isInCOZone())
      return 160;
    else
      return 100;
  }

  public int caulder_getDefenseBonusPercentage() {
    if (power || attacker.isInCOZone())
      return 160;
    else
      return 100;
  }

  public void caulder_dayStart() {
    for (Unit unit : game.getActivePlayer().getArmy()) {
      if (unit.isInCOZone()) {
        unit.heal(5);
      }
    }
  }

  public int gage_getAttackBonusPercentage() {
    if (power || attacker.isInCOZone()) {
      if (attacker.isInDirect() || attacker.isNaval()) {
        return 130;
      } else {
        return 110;
      }
    } else {
      return 100;
    }
  }

  public int gage_getDefenseBonusPercentage() {
    if (power || defender.isInCOZone()) {
      if (defender.isInDirect() || defender.isNaval()) {
        return 120;
      } else {
        return 110;
      }
    } else {
      return 100;
    }
  }

  public int gage_fireRangeHook() {
    if (power)
      return fireRange + 2;
    else
      return fireRange;
  }

  public int greyfield_getAttackBonusPercentage() {
    if (power || attacker.isInCOZone()) {
      if (attacker.isNaval() ||
        attacker.getName.equals("bcopter") ||
        attacker.getName.equals("tcopter") ||
        attacker.getName.equals("ship_plane")) {
        return 120;
      }else{
        return 110;
      }
    } else {
      return 100;
    }
  }

  public int greyfield_getDefenseBonusPercentage() {
    if (power || defender.isInCOZone()) {
      if (attacker.isNaval() ||
        attacker.stats.name.equals("bcopter") ||
        attacker.stats.name.equals("tcopter") ||
        attacker.stats.name.equals("ship_plane"))  {
        return 150;
      }else{
        return 110;
      }
    } else {
      return 100;
    }
  }

  public void greyfield_power() {
    for (Unit unit : game.getActivePlayer().getArmy()) {
      unit.resupply();
    }
  }

  public int isabella_getAttackBonusPercentage() {
    if (power || attacker.isInCOZone())
      return 120;
    else
      return 100;
  }

  public int isabella_getDefenseBonusPercentage() {
    if (power || defender.isInCOZone())
      return 120;
    else
      return 100;
  }

  public int isabella_unitMovementHook() {
    if (power)
      return movement + 2;
    else
      return movement;
  }

  public int isabella_fireRangeHook() {
    if (power)
      return fireRange + 2;
    else
      return fireRange;
  }

  public int lin_getAttackBonusPercentage() {
    if (power || attacker.isInCOZone()) {
      if (attacker.isLand()) {
        return 130;
      } else {
        return 110;
      }
    } else {
      return 100;
    }
  }

  public int lin_getDefenseBonusPercentage() {
    if (power || attacker.isInCOZone()) {
      if (attacker.isLand()) {
        return 130;
      } else {
        return 110;
      }
    } else {
      return 100;
    }
  }

  public int lin_visionHook() {
    if (power)
      return vision + 2;
    else
      return vision;
  }

  public int penny_getAttackBonusPercentage() {
    if (power || attacker.isInCOZone())
      return 110;
    else
      return 100;
  }

  public int penny_getDefenseBonusPercentage() {
    if (power || attacker.isInCOZone())
      return 110;
    else
      return 100;
  }

  public void power() {
    // todo weather
    game.startWeather(3, 3);
  }

  public int tasha_getAttackBonusPercentage() {
    if (power || attacker.isInCOZone()) {
      if (attacker.isAir()) {
        return 150;
      } else {
        return 110;
      }
    } else {
      return 100;
    }
  }

  public int tasha_getDefenseBonusPercentage() {
    if (power || defender.isInCOZone()) {
      if (attacker.isAir()) {
        return 130;
      } else {
        return 110;
      }
    } else {
      return 100;
    }
  }

  public int tasha_unitMovementHook() {
    if (power)
      return movement + 2;
    else
      return movement;
  }

  public int waylon_getAttackBonusPercentage() {
    if (power || attacker.isInCOZone()) {
      if (attacker.isAir()) {
        return 130;
      } else {
        return 110;
      }
    } else {
      return 100;
    }
  }

  public int waylon_getDefenseBonusPercentage() {
    if (power || defender.isInCOZone()) {
      if (attacker.isAir()) {
        return 420;
      } else if (defender.isAir()) {
        return 140;
      } else {
        return 110;
      }
    } else {
      return 100;
    }
  }

  public int will_getAttackBonusPercentage() {
    if (power || attacker.isInCOZone()) {
      if (attacker.isDirect()) {
        return 130;
      } else {
        return 110;
      }
    } else {
      return 100;
    }
  }

  public int will_getDefenseBonusPercentage() {
    if (power || defender.isInCOZone())
      return 110;
    else
      return 100;
  }

  public int will_unitMovementHook() {
    if (power)
      return movement + 2;
    else
      return movement;
  }